@charset "utf-8";

// ==========================================================================
// custom mixin
// ==========================================================================

// Image mixin
// ==========================================================================
// disabled user-drag for image
@mixin disabled-select-drag() {
	-webkit-user-drag: none;
	-webkit-user-select: none;
	-moz-user-drag: none;
	-moz-user-select: none;
	-ms-user-drag: none;
	-ms-user-select: none;
	user-drag: none;
	user-select: none;
}
@mixin disabled-select() {
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}


// Layout
// ===================================================================
//
// コンテナレイヤー
// @param $innerWidth 内径 幅
// @param $innerHeight 内径 高さ
//
@mixin content-layer($innerWidth, $innerHeight) {
	overflow: hidden;
	width: 100%;
	min-width: $innerWidth;
	height: $innerHeight;

	.inner {
		position: relative;
		overflow: hidden;
		min-width: $innerWidth;
		height: $innerHeight;
	}
}

//
// 絶対位置に配置
// @param $top
// @param $right
// @param $bottom
// @param $left
//
@mixin position($top, $right, $bottom, $left) {
	position: absolute;

	@if $top    != '' { top: $top; }
	@if $bottom != '' { bottom: $bottom; }
	@if $left   != '' { left: $left; }
	@if $right  != '' { right: $right; }
}

// centering
@mixin position-center($width, $height) {
	position: absolute;
	top: 50%;
	left: 50%;

	// @if $width  != '' { width: $width; }
	// @if $height != '' { height: $height; }
	@if $width  != '' { margin-left: -$width / 2; }
	@if $height != '' { margin-top: -$height / 2; }
}

// CSS Sprite
// ===================================================================
@mixin sprite() {
	display: block;
	//text-indent: -9999px;
	background-repeat: no-repeat;
	@include hide-text();
	line-height: 1;
}

@mixin sprites($map, $map-item, $isCommon: false) {
	@if $isCommon {
		background-image: sprite-url($map);
		background-repeat: no-repeat;
		//background-size: round(image-width(sprite-path($map)) / 2) round(image-height(sprite-path($map)) / 2);
	} @else {
		$pos-y: nth(sprite-position($map, $map-item), 2);
		width: image-width(sprite-file($map, $map-item));
		height: image-height(sprite-file($map, $map-item));
		background-position: 0 $pos-y;
	}
}

@mixin sprite-item($url, $width, $height) {
	display: block;
	width: $width;
	height: $height;
	background-image: url($url);
	background-repeat: no-repeat;
	text-indent: -9999px;
	line-height: 1;
}

@mixin list-sprite-item($width, $height, $bgLeft, $bgTop: 0) {
	width: $width;
	height: $height;
	background-position: $bgLeft 0;

	@if $bgTop != 0 {
		&.current,
		&:hover {
			background-position: $bgLeft $bgTop;
		}
	}
}

//  (require compass)
// @mixin sprite-footer($name) {
// 	$sprite-layout: horizontal;
// 	$sprite-spacing: 20px;
// 	$sprites: sprite-map("footer/*.png");
// 	$spritesImg: sprite-url($sprites);

// 	// display: block;
// 	// height: image-height(sprite-file($sprites, $name)) / 2;
// 	width: image-width(sprite-file($sprites, $name));
// 	background-image: $spritesImg;
// 	// background-repeat: no-repeat;
// 	$ypos: round(nth(sprite-position($sprites, $name), 2));
// 	background-position: 0 $ypos;
// 	//@include background-size(auto 32px);
// }



